@{
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}


<div class="box box-primary box-body" ng-controller="HRDocRptCtrl" data-ng-init="init()">

    @using (Html.BeginForm("ShowAllDocInfo", "../Reports", System.Web.Mvc.FormMethod.Post, new { target = "_blank", name = "H1Form", id = "H1Form" }))
    {

        <div class="box-header with-border">
            <i class="fa fa-user"></i>
            <h3 class="box-title">All Documents Information</h3>
            <div class="box-tools pull-right">
                <div class="row">
                    <div class="col-lg-4">
                        <button ng-disabled="showPrint" type="submit" id="btnPreview" name="ButtonType" value="Preview" class="btn btn-flat btn-success pull-right">
                            <i class="fa fa-print"></i> Preview
                        </button>
                    </div>
                    <div class="col-lg-4">
                        <button ng-disabled="loading" type="button" id="btnRefresh" name="btnRefresh" value="Refresh" data-ng-click="toggleRefreshTable()" class="btn btn-warning btn-flat ">
                            <i class="fa fa-refresh"></i> Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="box-body">          

            <div class="row">
                <div class="col-sm-2 col-md-2 col-lg-2">
                    <div class="form-group">
                        <label>Owner Level</label>
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">
                        <select name="OwnerLevelID"  class="form-control" ng-model="ReportModel.OwnerLevel"
                                ng-options="ownerLevel as ownerLevel.LevelName for ownerLevel in ownerLevels
                        track by ownerLevel.OwnerLevelID">
                            <option value="">--Select--</option>
                        </select>                       
                    </div>
                </div>

                <div class="col-sm-2 col-md-2 col-lg-2">
                    <div class="form-group">
                        <label>Owner</label>
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">
                        <select name="OwnerID" class="form-control" ng-model="ReportModel.Owner"
                                data-ng-options="owner as owner.OwnerName for owner in ownersForSpecificOwnerLevel track by owner.OwnerID"
                                data-ng-disabled="!ReportModel.OwnerLevel">
                            <option value="">--Select--</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-2 col-md-2 col-lg-2">
                    <div class="form-group">
                        <label>Document Category</label>
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">

                        <select name="DocCategory" ui-select2="{ allowClear: true}" id="select-option" ng-model="ReportModel.DocCategory" data-placeholder="Document Category" style="width:100%;" class="form-control">
                            <option value=""></option>
                            <option ng-repeat="item in DocCatForOwner" value="{{item.DocCategoryID}}">{{item.DocCategoryName}}</option>
                        </select>
                    </div>
                </div>

                <div class="col-sm-2 col-md-2 col-lg-2">
                    <div class="form-group">
                        <label>Doc Sub Category</label>
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">

                        <select name="DocType" ui-select2="{ allowClear: true}" id="select-option" ng-model="ReportModel.DocType" data-placeholder="Document Sub Category" style="width:100%; height:32px">
                            <option value=""></option>
                            <option ng-repeat="item in DocTypeForOwner" value="{{item.DocTypeID}}">{{item.DocTypeName}}</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-2 col-md-2 col-lg-2">
                    <label>From Date</label>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">
                        <input id="FromDate" name="FromDate" readonly required type="text" autocomplete="off" value="01/01/2019" class="DatePicker form-control" placeholder="DD/MM/YYYY"
                               data-ng-model="ReportModel.FromDate" style="background:#fff" />
                    </div>
                </div>
                <div class="col-sm-2 col-md-2 col-lg-2">
                    <label>To Date</label>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">
                        <input id="ToDate" name="ToDate" readonly required type="text" autocomplete="off" class="DatePicker form-control" placeholder="DD/MM/YYYY"
                               data-ng-model="ReportModel.ToDate" style="background:#fff" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2 col-md-2 col-lg-2">
                    <label style="padding-left:30px;">Download Type</label>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <input type="radio" name="ReportType" value="PDF" checked="checked" /> <label>PDF</label>
                    <input type="radio" name="ReportType" value="EXCEL" /> <label>EXCEL</label>
                </div>
            </div>

            <br />
        </div>

    }
</div>

<script type="text/javascript">
    $('.DatePicker').datepicker({
        format: "dd/mm/yyyy",
        autoclose: true
    });

    $('#FromDate').datepicker().on('changeDate', function (ev) {
        var EnteredDate = $('#FromDate').val(); // For JQuery
        var date = EnteredDate.substring(0, 2);
        var month = EnteredDate.substring(3, 5);
        var year = EnteredDate.substring(6, 10);
        var myDate = new Date(year, month - 1, date);

        var today = new Date();
        if (myDate > today) {
            $('#FromDate').val('');
            toastr.error("Date should not grater than system date.");
        }
        ////////////
        if ($('#ToDate').val() != '') {
            var EnteredToDate = $('#txtChequePrintToDate').val(); // For JQuery
            var date = EnteredToDate.substring(0, 2);
            var month = EnteredToDate.substring(3, 5);
            var year = EnteredToDate.substring(6, 10);
            var myToDate = new Date(year, month - 1, date);
            if (myToDate < myDate) {
                $('#txtChequePrintDate').val('');
                toastr.error("From Date should Smaller than To Date.");
            }
        }
        ///////

        $('.datepicker').hide();
    });

    $('#ToDate').datepicker().on('changeDate', function (ev) {
        var EnteredDate = $('#ToDate').val(); // For JQuery
        var date = EnteredDate.substring(0, 2);
        var month = EnteredDate.substring(3, 5);
        var year = EnteredDate.substring(6, 10);
        var myDate = new Date(year, month - 1, date);

        /////////////

        var EnteredDate = $('#FromDate').val(); // For JQuery
        var date = EnteredDate.substring(0, 2);
        var month = EnteredDate.substring(3, 5);
        var year = EnteredDate.substring(6, 10);
        var myPrevDate = new Date(year, month - 1, date);

        ////

        var today = new Date();
        if (myDate > today) {
            $('#ToDate').val('');
            toastr.error("Date should not grater than system date.");
        }

        if (myPrevDate > myDate) {
            $('#ToDate').val('');
            toastr.error("To Date should grater than From Date.");
        }

        $('.datepicker').hide();
    });

    app.controller('HRDocRptCtrl', function ($scope, $http) {
       

        $scope.ReportModel = {
            OwnerLevel: { OwnerLevelID: "", LevelName: "" },
            Owner: { OwnerID: "", OwnerName: "" },
            DocCategory: { DocCategoryID: "", DocCategoryName: "" },
            DocType: { DocTypeID: "", DocTypeName: "" },
            DocProperty: { DocPropertyID: "", DocPropertyName: "" },
            SearchBy: '1',
            SearchFor: "",
            DocCat: '',
            DocType: '',
            Status: ""
        };


        $http.get('/DocScanningModule/OwnerProperIdentity/GetOwnerLevel?_OwnerLevelID=')
          .success(function (response) {
              $scope.ownerLevels = response.result;
              $scope.ReportModel.OwnerLevel = response.result[0];
              $scope.loading = false;
          })
          .error(function () {
              $scope.loading = false;
          });

        $scope.$watch('ReportModel.OwnerLevel', function (newVal, oldVal) {
            if (newVal) {
                if (newVal != "" && newVal != oldVal) {
                    $scope.ReportModel.Owner = "";
                    $scope.ReportModel.DocCategory = "";
                    $scope.ReportModel.DocType = "";
                    $scope.ReportModel.DocProperty = "";
                    //$scope.ResetImageViewrs();
                    $http.post('/DocScanningModule/OwnerProperIdentity/GetOwnerForSpecificOwnerLevel',
                        { _OwnerLevelID: $scope.ReportModel.OwnerLevel.OwnerLevelID })
                        .success(function (response) {
                            $scope.ownersForSpecificOwnerLevel = response.result;
                            $scope.ReportModel.Owner = response.result[0];
                            $scope.loading = false;
                        }).error(function () {
                            $scope.loading = false;
                        });
                }
            }
        });

        $scope.DocCatForOwner = [];
        $scope.$watch('ReportModel.Owner', function (newVal) {
            if (newVal) {
                $scope.ReportModel.DocCategory = "";
                $scope.ReportModel.DocType = "";
                $scope.ReportModel.DocProperty = "";
                //$scope.ResetImageViewrs();
                $http.post('/DocScanningModule/OwnerProperIdentity/GetDocumentCategoriesForSpecificOwner',
                    { _OwnerID: $scope.ReportModel.Owner.OwnerID })
                    .success(function (response) {
                        $scope.docCategoriesForSpecificOwner = response.result;
                        $scope.DocCatForOwner = response.result;
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });
            }
        });

        $scope.DocTypeForOwner = [];
        $scope.$watch('ReportModel.DocCategory', function (newVal) {
            if (newVal) {
                $scope.ReportModel.DocType = "";
                $scope.ReportModel.DocProperty = "";
                $http.post('/DocScanningModule/OwnerProperIdentity/GetDocumentTypeForSpecificDocCategory',
                    {
                        _DocCategoryID: $scope.ReportModel.DocCategory,
                        _OwnerID: $scope.ReportModel.Owner.OwnerID
                    })
                    .success(function (response) {
                        $scope.docTypeForSpecificDocCategory = response.result;
                        $scope.DocTypeForOwner = response.result;
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });
            }
        });

        $scope.$watch('ReportModel.DocType', function (newVal) {
            if (newVal) {
                $scope.ReportModel.DocProperty = "";

                $http.post('/DocScanningModule/MultiDocScan/GetDocumentProperty',
                    {
                        _DocCategoryID: $scope.ReportModel.DocCategory,
                        _OwnerID: $scope.ReportModel.Owner.OwnerID,
                        _DocTypeID: $scope.ReportModel.DocType
                    })
                    .success(function (response) {
                        $scope.docPropertyForSpecificDocType = response.result;
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });
            }
        });

        $scope.$watch('ReportModel.DocProperty', function (newVal, oldVal) {
            if (newVal) {
                $scope.BindDataToGrid();
            }
        });

    });
</script>